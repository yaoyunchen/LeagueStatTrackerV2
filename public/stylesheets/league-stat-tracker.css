/* EXIT ANIMATIONS */
/* --------------- */
/* Scale down */
@keyframes scaleDown {
  from  { opacity: 0; -webkit-transform: scale(-0.8); }
}

/* Rotate and fall */
@keyframes rotateFall {
  0%    { transform: rotateZ(0deg); }
  20%   { transform: rotateZ(10deg); animation-timing-function: ease-out }
  40%   { transform: rotateZ(17deg); }
  60%   { transform: rotateZ(16deg); }
  100%  { transform: translateY(100%) rotateZ(17deg); }
}

/* Slide out from left */
@keyframes slideOutLeft {
  to    { transform: translateX(-100%); }
}

/* Slide out from bottom */
@keyframes slideOutUp {
  to    { transform: translateY(-100%); }
}

/* Rotate out newspaper */
@keyframes rotateOutNewspaper {
  to    { transform: translateZ(-3000px) rotateZ(360deg); opacity: 0; }
}

/* ENTRY ANIMATIONS */
/* ---------------- */
/* Scale up */
@keyframes scaleUp {
  from  { opacity: 0.3; -webkit-transform: scale(0.8); }
}

/* Slide in from right */
@keyframes slideInRight {
  from  { transform: translateX(100%); }
  to    { transform: translateX(0); }
}

/* Slide in from bottom */
@keyframes slideInUp {
  from  { transform: translateY(100%); }
  to    { transform: translateY(0); }
}

/* Slide in from top */ 
@keyframes slideInDown {
  from  { transform: translateY(-100%); }
  to    { transform: translateY(0); }
}

/* Sets the animation when page changes. */
.page-home.ng-enter, .page-summoner.ng-enter {
  animation:  slideInRight 0.5s both ease-in; 
  z-index:    3000;
}
.page-home.ng-leave, .page-summoner.ng-leave {
  animation:  slideOutLeft 0.5s both ease-in;
  z-index:    4000;
}


/* Styling for the free champion rotation slideshow on the home page. */
.jumbotron-slideshow {
  position:               relative;
  background-color:       transparent;
  margin:                 auto;
  padding:                0;
  text-align:             center;
  height:                 60%;
}
.jumbotron-slideshow .slideshow {
  background-size:        cover;
  background-repeat:      no-repeat;
  background-position:    50% 50%;
  position:               absolute;
  top:                    0;
  bottom:                 0;
  left:                   0;
  right:                  0;
  transition:             opacity 1s;
  opacity:                0;
  border-radius:          50px 50px 50px 50px;
  border:                 2px solid #f5c270;
}
.jumbotron-slideshow .slideshow.visible {
  transition:             none;
  opacity:                1;
  z-index:                -1;
}
.jumbotron-slideshow > h2 {
  position:               absolute;
  bottom:                 0;
  left:                   45%;
}

/* EXIT ANIMATIONS */
/* --------------- */
/* Scale down */
@keyframes scaleDown {
  from  { opacity: 0; -webkit-transform: scale(-0.8); }
}

/* Rotate and fall */
@keyframes rotateFall {
  0%    { transform: rotateZ(0deg); }
  20%   { transform: rotateZ(10deg); animation-timing-function: ease-out }
  40%   { transform: rotateZ(17deg); }
  60%   { transform: rotateZ(16deg); }
  100%  { transform: translateY(100%) rotateZ(17deg); }
}

/* Slide out from left */
@keyframes slideOutLeft {
  to    { transform: translateX(-100%); }
}

/* Slide out from bottom */
@keyframes slideOutUp {
  to    { transform: translateY(-100%); }
}

/* Rotate out newspaper */
@keyframes rotateOutNewspaper {
  to    { transform: translateZ(-3000px) rotateZ(360deg); opacity: 0; }
}

/* ENTRY ANIMATIONS */
/* ---------------- */
/* Scale up */
@keyframes scaleUp {
  from  { opacity: 0.3; -webkit-transform: scale(0.8); }
}

/* Slide in from right */
@keyframes slideInRight {
  from  { transform: translateX(100%); }
  to    { transform: translateX(0); }
}

/* Slide in from bottom */
@keyframes slideInUp {
  from  { transform: translateY(100%); }
  to    { transform: translateY(0); }
}

/* Slide in from top */ 
@keyframes slideInDown {
  from  { transform: translateY(-100%); }
  to    { transform: translateY(0); }
}

/* Sets the animation when page changes. */
.page-home.ng-enter, .page-summoner.ng-enter {
  animation:  slideInRight 0.5s both ease-in; 
  z-index:    3000;
}
.page-home.ng-leave, .page-summoner.ng-leave {
  animation:  slideOutLeft 0.5s both ease-in;
  z-index:    4000;
}


/* Styling for the free champion rotation slideshow on the home page. */
.jumbotron-slideshow {
  position:               relative;
  background-color:       transparent;
  margin:                 auto;
  padding:                0;
  text-align:             center;
  height:                 60%;
}
.jumbotron-slideshow .slideshow {
  background-size:        cover;
  background-repeat:      no-repeat;
  background-position:    50% 50%;
  position:               absolute;
  top:                    0;
  bottom:                 0;
  left:                   0;
  right:                  0;
  transition:             opacity 1s;
  opacity:                0;
  border-radius:          50px 50px 50px 50px;
  border:                 2px solid #f5c270;
}
.jumbotron-slideshow .slideshow.visible {
  transition:             none;
  opacity:                1;
  z-index:                -1;
}
.jumbotron-slideshow > h2 {
  position:               absolute;
  bottom:                 0;
  left:                   45%;
}

/* Used to set the same background image for all pages. */
body {
  background:               url('/images/bg.jpg') no-repeat center fixed;
  -webkit-background-size:  cover;
  -moz-background-size:     cover;
  -o-background-size:       cover;
  background-size:          cover;
  color:                    #f5c270;
  font-family:              Arial, Helvetica, sans-serif;
}

/* Sets the container div so it will clear the navbar. */
.container {
  position:                 absolute;
  top:                      50px;
  width:                    100%;
  height:                   100%;
  text-align:               center;
}

/* Sets the injected page view display. */
.page {
  left:                     0;
  bottom:                   0;
  position:                 absolute;
  width:                    100%;
  height:                   100%;
}

/* Consistent headings for all pages */
.page h1 {
  margin:                   10px;
  text-align:               center;
  font-size:                3em; 
  color:                    #f5c270;
}

/* Used as a seperator between divs. */
hr {
  border-top:               1px solid #f09d1f;
  margin:                   5px 0 5px 0;
}

/* Makes sure navbar is on top of everything else. */
header nav.navbar {
  z-index:                  9000;
  margin:                   0;
}

/* Used to style the drop down select for selecting region. */
select {
  height:                   34px;
}

/* Styling for the tabs */
.tab {
  width:                    100%;
  display:                  table;
  float:                    none;
}
.nav-tabs > li, .nav-pills > li {
  float:                    none;
  display:                  inline-block;
}
.nav-tabs, .nav-pills {
  text-align:               center;
  border-bottom:            1px solid #f5c270;
}
.ng-binding {
  color:                    #f5c270;
}
.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
  background-color:         #f5c270;
  border:                   none;
}




/* Styling for the search bar at the top. */
.summoner-search.btn-warning {
  color:            #555555;
}
.summoner-search.input {
  background-color: #cccccc;
  border:           1px solid #f09d1f;
}

/* General styling for the summoner info div */
.summoner-info {
  text-align:     left;
  padding:        0;
  padding-left:   10px;
}

/* Centers the summoner profile icon. */
.profile-icon {
  padding-top:    10px;
  padding-left:   10px;
}
.profile-icon > img {
  display:        block;
  margin:         auto;
  left: 0;
  right: 0;
  border:         2px solid #f09d1f;
}

/* Table for displaying summoner info. */
.summoner-info > table {
  table-layout:   fixed;
  word-wrap:      break-word;
  margin:         auto;
  font-size:      1em;
}
.summoner-info > td {
  width:          10%;
  border:         none;
}
.table-borderless tbody tr td, .table-borderless tbody tr th, .table-borderless thead tr th {
  border:         none;
}

/* Styling for the buttons to change graphs. */
.summoner-stat-btns {
  text-align:     center;
}
.stat-btn {
  margin-bottom:  5px;
}

/* Styling for the chart displaying the summoner's stats for various game modes. */
.ac-chart {
  text-align:     center;
  /* !important used here as its css from the CDN cannot be edited */
  width:          100% !important;
}
.chart {
  width:          100%;
  height:         300px;
}
.chart text {
  fill:           #f09d1f;
}
.chart rect {
  fill:           white;
  fill-opacity:   50%;
}

/* Centers text within the recent tab. */
.summoner-recent, .champ-load-img {
  text-align:       center;
}

/* Sets table layout and font. */
.summoner-recent > table {
  table-layout:     fixed;
  word-wrap:        break-word;
  margin:           auto;
  font-size:        1em;
}
.summoner-recent > table > tbody > tr > td {
  vertical-align:   middle;
}

/* Sets icon size when displaying champions for team one and team two. */
.champ-icon {
  width:            45px;
  height:           45px;
}

.champ-icon-link > img:hover {
  -webkit-filter:   brightness(200%); 
  filter:           brightness(200%);
}

/* Centers the champion loading screen image in the modal, and add a shadow. */
.champ-load-img > img {
  width:            50%;
  box-shadow:       9px 9px 7px rgba(0,0,0,0.3)
}

/* Sets the modal window's font color for the columns. */
.modal-table > td {
  color:            #FFFFFF;
}
@-webkit-keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@-webkit-keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

.ngdialog.ngdialog-theme-default {
  padding-bottom: 160px;
  padding-top: 160px;
}

.ngdialog.ngdialog-theme-default.ngdialog-closing .ngdialog-content {
  -webkit-animation: ngdialog-flyout .5s;
  animation: ngdialog-flyout .5s;
}

.ngdialog.ngdialog-theme-default .ngdialog-content {
  -webkit-animation: ngdialog-flyin .5s;
  animation: ngdialog-flyin .5s;
  background: rgba(244,175,54,0.8);
  border-radius: 5px;
  color: #444;
  font-family: 'Helvetica',sans-serif;
  font-size: 1.1em;
  line-height: 1.5em;
  margin: 0 auto;
  max-width: 100%;
  padding: 1em;
  position: relative;
  width: 450px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close {
  border-radius: 5px;
  cursor: pointer;
  position: absolute;
  right: 0;
  top: 0;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:before {
  background: transparent;
  border-radius: 3px;
  color: #bbb;
  content: '\00D7';
  font-size: 26px;
  font-weight: 400;
  height: 30px;
  line-height: 26px;
  position: absolute;
  right: 3px;
  text-align: center;
  top: 3px;
  width: 30px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:hover:before,
.ngdialog.ngdialog-theme-default .ngdialog-close:active:before {
  color: #777;
}

.ngdialog.ngdialog-theme-default .ngdialog-message {
  margin-bottom: .5em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input {
  margin-bottom: 1em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"] {
  background: #fff;
  border: 0;
  border-radius: 3px;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  margin: 0 0 .25em;
  min-height: 2.5em;
  padding: .25em .67em;
  width: 100%;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"]:focus {
  box-shadow: inset 0 0 0 2px #8dbdf1;
  outline: none;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons {
  *zoom: 1;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons:after {
  content: '';
  display: table;
  clear: both;
}

.ngdialog.ngdialog-theme-default .ngdialog-button {
  border: 0;
  border-radius: 3px;
  cursor: pointer;
  float: right;
  font-family: inherit;
  font-size: .8em;
  letter-spacing: .1em;
  line-height: 1em;
  margin: 0 0 0 .5em;
  padding: .75em 2em;
  text-transform: uppercase;
}

.ngdialog.ngdialog-theme-default .ngdialog-button:focus {
  -webkit-animation: ngdialog-pulse 1.1s infinite;
  animation: ngdialog-pulse 1.1s infinite;
  outline: none;
}

@media (max-width: 568px) {
  .ngdialog.ngdialog-theme-default .ngdialog-button:focus {
    -webkit-animation: none;
    animation: none;
  }
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-primary {
  background: #3288e6;
  color: #fff;
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-secondary {
  background: #e0e0e0;
  color: #777;
}
/*# sourceMappingURL=data:application/json;base64, */

/* EXIT ANIMATIONS */
/* --------------- */
/* Scale down */
@keyframes scaleDown {
  from  { opacity: 0; -webkit-transform: scale(-0.8); }
}

/* Rotate and fall */
@keyframes rotateFall {
  0%    { transform: rotateZ(0deg); }
  20%   { transform: rotateZ(10deg); animation-timing-function: ease-out }
  40%   { transform: rotateZ(17deg); }
  60%   { transform: rotateZ(16deg); }
  100%  { transform: translateY(100%) rotateZ(17deg); }
}

/* Slide out from left */
@keyframes slideOutLeft {
  to    { transform: translateX(-100%); }
}

/* Slide out from bottom */
@keyframes slideOutUp {
  to    { transform: translateY(-100%); }
}

/* Rotate out newspaper */
@keyframes rotateOutNewspaper {
  to    { transform: translateZ(-3000px) rotateZ(360deg); opacity: 0; }
}

/* ENTRY ANIMATIONS */
/* ---------------- */
/* Scale up */
@keyframes scaleUp {
  from  { opacity: 0.3; -webkit-transform: scale(0.8); }
}

/* Slide in from right */
@keyframes slideInRight {
  from  { transform: translateX(100%); }
  to    { transform: translateX(0); }
}

/* Slide in from bottom */
@keyframes slideInUp {
  from  { transform: translateY(100%); }
  to    { transform: translateY(0); }
}

/* Slide in from top */ 
@keyframes slideInDown {
  from  { transform: translateY(-100%); }
  to    { transform: translateY(0); }
}

/* Sets the animation when page changes. */
.page-home.ng-enter, .page-summoner.ng-enter {
  animation:  slideInRight 0.5s both ease-in; 
  z-index:    3000;
}
.page-home.ng-leave, .page-summoner.ng-leave {
  animation:  slideOutLeft 0.5s both ease-in;
  z-index:    4000;
}


/* Styling for the free champion rotation slideshow on the home page. */
.jumbotron-slideshow {
  position:               relative;
  background-color:       transparent;
  margin:                 auto;
  padding:                0;
  text-align:             center;
  height:                 60%;
}
.jumbotron-slideshow .slideshow {
  background-size:        cover;
  background-repeat:      no-repeat;
  background-position:    50% 50%;
  position:               absolute;
  top:                    0;
  bottom:                 0;
  left:                   0;
  right:                  0;
  transition:             opacity 1s;
  opacity:                0;
  border-radius:          50px 50px 50px 50px;
  border:                 2px solid #f5c270;
}
.jumbotron-slideshow .slideshow.visible {
  transition:             none;
  opacity:                1;
  z-index:                -1;
}
.jumbotron-slideshow > h2 {
  position:               absolute;
  bottom:                 0;
  left:                   45%;
}

/* Used to set the same background image for all pages. */
body {
  background:               url('/images/bg.jpg') no-repeat center fixed;
  -webkit-background-size:  cover;
  -moz-background-size:     cover;
  -o-background-size:       cover;
  background-size:          cover;
  color:                    #f5c270;
  font-family:              Arial, Helvetica, sans-serif;
}

/* Sets the container div so it will clear the navbar. */
.container {
  position:                 absolute;
  top:                      50px;
  width:                    100%;
  height:                   100%;
  text-align:               center;
}

/* Sets the injected page view display. */
.page {
  left:                     0;
  bottom:                   0;
  position:                 absolute;
  width:                    100%;
  height:                   100%;
}

/* Consistent headings for all pages */
.page h1 {
  margin:                   10px;
  text-align:               center;
  font-size:                3em; 
  color:                    #f5c270;
}

/* Used as a seperator between divs. */
hr {
  border-top:               1px solid #f09d1f;
  margin:                   5px 0 5px 0;
}

/* Makes sure navbar is on top of everything else. */
header nav.navbar {
  z-index:                  9000;
  margin:                   0;
}

/* Used to style the drop down select for selecting region. */
select {
  height:                   34px;
}

/* Styling for the tabs */
.tab {
  width:                    100%;
  display:                  table;
  float:                    none;
}
.nav-tabs > li, .nav-pills > li {
  float:                    none;
  display:                  inline-block;
}
.nav-tabs, .nav-pills {
  text-align:               center;
  border-bottom:            1px solid #f5c270;
}
.ng-binding {
  color:                    #f5c270;
}
.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
  background-color:         #f5c270;
  border:                   none;
}




/* Styling for the search bar at the top. */
.summoner-search.btn-warning {
  color:            #555555;
}
.summoner-search.input {
  background-color: #cccccc;
  border:           1px solid #f09d1f;
}

/* General styling for the summoner info div */
.summoner-info {
  text-align:     left;
  padding:        0;
  padding-left:   10px;
}

/* Centers the summoner profile icon. */
.profile-icon {
  padding-top:    10px;
  padding-left:   10px;
}
.profile-icon > img {
  display:        block;
  margin:         auto;
  left: 0;
  right: 0;
  border:         2px solid #f09d1f;
}

/* Table for displaying summoner info. */
.summoner-info > table {
  table-layout:   fixed;
  word-wrap:      break-word;
  margin:         auto;
  font-size:      1em;
}
.summoner-info > td {
  width:          10%;
  border:         none;
}
.table-borderless tbody tr td, .table-borderless tbody tr th, .table-borderless thead tr th {
  border:         none;
}

/* Styling for the buttons to change graphs. */
.summoner-stat-btns {
  text-align:     center;
}
.stat-btn {
  margin-bottom:  5px;
}

/* Styling for the chart displaying the summoner's stats for various game modes. */
.ac-chart {
  text-align:     center;
  /* !important used here as its css from the CDN cannot be edited */
  width:          100% !important;
}
.chart {
  width:          100%;
  height:         300px;
}
.chart text {
  fill:           #f09d1f;
}
rect {
  fill:           white;
  fill-opacity:   50%;
}

/* Centers text within the recent tab. */
.summoner-recent, .champ-load-img {
  text-align:       center;
}

/* Sets table layout and font. */
.summoner-recent > table {
  table-layout:     fixed;
  word-wrap:        break-word;
  margin:           auto;
  font-size:        1em;
}
.summoner-recent > table > tbody > tr > td {
  vertical-align:   middle;
}

/* Sets icon size when displaying champions for team one and team two. */
.champ-icon {
  width:            45px;
  height:           45px;
}

.champ-icon-link > img:hover {
  -webkit-filter:   brightness(200%); 
  filter:           brightness(200%);
}

/* Centers the champion loading screen image in the modal, and add a shadow. */
.champ-load-img > img {
  width:            50%;
  box-shadow:       9px 9px 7px rgba(0,0,0,0.3)
}

/* Sets the modal window's font color for the columns. */
.modal-table > td {
  color:            #FFFFFF;
}
@-webkit-keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@-webkit-keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

.ngdialog.ngdialog-theme-default {
  padding-bottom: 160px;
  padding-top: 160px;
}

.ngdialog.ngdialog-theme-default.ngdialog-closing .ngdialog-content {
  -webkit-animation: ngdialog-flyout .5s;
  animation: ngdialog-flyout .5s;
}

.ngdialog.ngdialog-theme-default .ngdialog-content {
  -webkit-animation: ngdialog-flyin .5s;
  animation: ngdialog-flyin .5s;
  background: rgba(244,175,54,0.8);
  border-radius: 5px;
  color: #444;
  font-family: 'Helvetica',sans-serif;
  font-size: 1.1em;
  line-height: 1.5em;
  margin: 0 auto;
  max-width: 100%;
  padding: 1em;
  position: relative;
  width: 450px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close {
  border-radius: 5px;
  cursor: pointer;
  position: absolute;
  right: 0;
  top: 0;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:before {
  background: transparent;
  border-radius: 3px;
  color: #bbb;
  content: '\00D7';
  font-size: 26px;
  font-weight: 400;
  height: 30px;
  line-height: 26px;
  position: absolute;
  right: 3px;
  text-align: center;
  top: 3px;
  width: 30px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:hover:before,
.ngdialog.ngdialog-theme-default .ngdialog-close:active:before {
  color: #777;
}

.ngdialog.ngdialog-theme-default .ngdialog-message {
  margin-bottom: .5em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input {
  margin-bottom: 1em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"] {
  background: #fff;
  border: 0;
  border-radius: 3px;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  margin: 0 0 .25em;
  min-height: 2.5em;
  padding: .25em .67em;
  width: 100%;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"]:focus {
  box-shadow: inset 0 0 0 2px #8dbdf1;
  outline: none;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons {
  *zoom: 1;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons:after {
  content: '';
  display: table;
  clear: both;
}

.ngdialog.ngdialog-theme-default .ngdialog-button {
  border: 0;
  border-radius: 3px;
  cursor: pointer;
  float: right;
  font-family: inherit;
  font-size: .8em;
  letter-spacing: .1em;
  line-height: 1em;
  margin: 0 0 0 .5em;
  padding: .75em 2em;
  text-transform: uppercase;
}

.ngdialog.ngdialog-theme-default .ngdialog-button:focus {
  -webkit-animation: ngdialog-pulse 1.1s infinite;
  animation: ngdialog-pulse 1.1s infinite;
  outline: none;
}

@media (max-width: 568px) {
  .ngdialog.ngdialog-theme-default .ngdialog-button:focus {
    -webkit-animation: none;
    animation: none;
  }
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-primary {
  background: #3288e6;
  color: #fff;
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-secondary {
  background: #e0e0e0;
  color: #777;
}
/*# sourceMappingURL=data:application/json;base64, */

/* Used to set the same background image for all pages. */
body {
  background:               url('/images/bg.jpg') no-repeat center fixed;
  -webkit-background-size:  cover;
  -moz-background-size:     cover;
  -o-background-size:       cover;
  background-size:          cover;
  color:                    #f5c270;
  font-family:              Arial, Helvetica, sans-serif;
}

/* Sets the container div so it will clear the navbar. */
.container {
  position:                 absolute;
  top:                      50px;
  width:                    100%;
  height:                   100%;
  text-align:               center;
}

/* Sets the injected page view display. */
.page {
  left:                     0;
  bottom:                   0;
  position:                 absolute;
  width:                    100%;
  height:                   100%;
}

/* Consistent headings for all pages */
.page h1 {
  margin:                   10px;
  text-align:               center;
  font-size:                3em; 
  color:                    #f5c270;
}

/* Used as a seperator between divs. */
hr {
  border-top:               1px solid #f09d1f;
  margin:                   5px 0 5px 0;
}

/* Makes sure navbar is on top of everything else. */
header nav.navbar {
  z-index:                  9000;
  margin:                   0;
}

/* Used to style the drop down select for selecting region. */
select {
  height:                   34px;
}

/* Styling for the tabs */
.tab {
  width:                    100%;
  display:                  table;
  float:                    none;
}
.nav-tabs > li, .nav-pills > li {
  float:                    none;
  display:                  inline-block;
}
.nav-tabs, .nav-pills {
  text-align:               center;
  border-bottom:            1px solid #f5c270;
}
.ng-binding {
  color:                    #f5c270;
}
.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
  background-color:         #f5c270;
  border:                   none;
}




/* Styling for the search bar at the top. */
.summoner-search.btn-warning {
  color:            #555555;
}
.summoner-search.input {
  background-color: #cccccc;
  border:           1px solid #f09d1f;
}

/* General styling for the summoner info div */
.summoner-info {
  text-align:     left;
  padding:        0;
  padding-left:   10px;
}

/* Centers the summoner profile icon. */
.profile-icon {
  padding-top:    10px;
  padding-left:   10px;
}
.profile-icon > img {
  display:        block;
  margin:         auto;
  left: 0;
  right: 0;
  border:         2px solid #f09d1f;
}

/* Table for displaying summoner info. */
.summoner-info > table {
  table-layout:   fixed;
  word-wrap:      break-word;
  margin:         auto;
  font-size:      1em;
}
.summoner-info > td {
  width:          10%;
  border:         none;
}
.table-borderless tbody tr td, .table-borderless tbody tr th, .table-borderless thead tr th {
  border:         none;
}

/* Styling for the buttons to change graphs. */
.summoner-stat-btns {
  text-align:     center;
}
.stat-btn {
  margin-bottom:  5px;
}

/* Styling for the chart displaying the summoner's stats for various game modes. */
.ac-chart {
  text-align:     center;
  /* !important used here as its css from the CDN cannot be edited */
  width:          100% !important;
}
.chart {
  width:          100%;
  height:         300px;
}
.chart text {
  fill:           #f09d1f;
}
.chart rect {
  fill:           white;
  opacity:        50%;
}

/* Centers text within the recent tab. */
.summoner-recent, .champ-load-img {
  text-align:       center;
}

/* Sets table layout and font. */
.summoner-recent > table {
  table-layout:     fixed;
  word-wrap:        break-word;
  margin:           auto;
  font-size:        1em;
}
.summoner-recent > table > tbody > tr > td {
  vertical-align:   middle;
}

/* Sets icon size when displaying champions for team one and team two. */
.champ-icon {
  width:            45px;
  height:           45px;
}

.champ-icon-link > img:hover {
  -webkit-filter:   brightness(200%); 
  filter:           brightness(200%);
}

/* Centers the champion loading screen image in the modal, and add a shadow. */
.champ-load-img > img {
  width:            50%;
  box-shadow:       9px 9px 7px rgba(0,0,0,0.3)
}

/* Sets the modal window's font color for the columns. */
.modal-table > td {
  color:            #FFFFFF;
}
@-webkit-keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@keyframes ngdialog-flyin {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@-webkit-keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes ngdialog-flyout {
  0% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

.ngdialog.ngdialog-theme-default {
  padding-bottom: 160px;
  padding-top: 160px;
}

.ngdialog.ngdialog-theme-default.ngdialog-closing .ngdialog-content {
  -webkit-animation: ngdialog-flyout .5s;
  animation: ngdialog-flyout .5s;
}

.ngdialog.ngdialog-theme-default .ngdialog-content {
  -webkit-animation: ngdialog-flyin .5s;
  animation: ngdialog-flyin .5s;
  background: rgba(244,175,54,0.8);
  border-radius: 5px;
  color: #444;
  font-family: 'Helvetica',sans-serif;
  font-size: 1.1em;
  line-height: 1.5em;
  margin: 0 auto;
  max-width: 100%;
  padding: 1em;
  position: relative;
  width: 450px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close {
  border-radius: 5px;
  cursor: pointer;
  position: absolute;
  right: 0;
  top: 0;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:before {
  background: transparent;
  border-radius: 3px;
  color: #bbb;
  content: '\00D7';
  font-size: 26px;
  font-weight: 400;
  height: 30px;
  line-height: 26px;
  position: absolute;
  right: 3px;
  text-align: center;
  top: 3px;
  width: 30px;
}

.ngdialog.ngdialog-theme-default .ngdialog-close:hover:before,
.ngdialog.ngdialog-theme-default .ngdialog-close:active:before {
  color: #777;
}

.ngdialog.ngdialog-theme-default .ngdialog-message {
  margin-bottom: .5em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input {
  margin-bottom: 1em;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"],
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"] {
  background: #fff;
  border: 0;
  border-radius: 3px;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  margin: 0 0 .25em;
  min-height: 2.5em;
  padding: .25em .67em;
  width: 100%;
}

.ngdialog.ngdialog-theme-default .ngdialog-input textarea:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="text"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="password"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="email"]:focus,
.ngdialog.ngdialog-theme-default .ngdialog-input input[type="url"]:focus {
  box-shadow: inset 0 0 0 2px #8dbdf1;
  outline: none;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons {
  *zoom: 1;
}

.ngdialog.ngdialog-theme-default .ngdialog-buttons:after {
  content: '';
  display: table;
  clear: both;
}

.ngdialog.ngdialog-theme-default .ngdialog-button {
  border: 0;
  border-radius: 3px;
  cursor: pointer;
  float: right;
  font-family: inherit;
  font-size: .8em;
  letter-spacing: .1em;
  line-height: 1em;
  margin: 0 0 0 .5em;
  padding: .75em 2em;
  text-transform: uppercase;
}

.ngdialog.ngdialog-theme-default .ngdialog-button:focus {
  -webkit-animation: ngdialog-pulse 1.1s infinite;
  animation: ngdialog-pulse 1.1s infinite;
  outline: none;
}

@media (max-width: 568px) {
  .ngdialog.ngdialog-theme-default .ngdialog-button:focus {
    -webkit-animation: none;
    animation: none;
  }
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-primary {
  background: #3288e6;
  color: #fff;
}

.ngdialog.ngdialog-theme-default .ngdialog-button.ngdialog-button-secondary {
  background: #e0e0e0;
  color: #777;
}
/*# sourceMappingURL=data:application/json;base64, */
